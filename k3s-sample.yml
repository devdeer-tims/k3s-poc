# Deployment and Service for UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui
  template:
    metadata:
      labels:
        app: ui
    spec:
      containers:
      - name: ui
        image: my-ui-image
        imagePullPolicy: IfNotPresent
        command: ['npm', 'start']
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ui-service
  labels:
    app: ui
spec:
  selector:
    app: ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---

# Deployment and Service for API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: my-api-image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app: api
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
# Ingress for UI and API
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ui-api-ingress
spec:
  rules:
  - host: ui.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ui-service
            port:
              number: 80
  - host: api.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 80

